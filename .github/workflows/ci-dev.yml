# .github/workflows/ci-dev.yaml
name: CI/CD Pipeline - Dev

on:
  push:
    branches:
      - dev

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 60  

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'  # Adjust based on your project

      - name: Install dependencies
        run: dotnet restore Faceit_Stats_Provider.sln  

      - name: Build
        run: dotnet build Faceit_Stats_Provider.sln --no-restore --configuration Release  # Corrected path to the solution file

      - name: Run tests
        run: dotnet test Faceit_Stats_Provider.sln --no-build --configuration Release --collect:"XPlat Code Coverage"  

      - name: Publish Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: TestResults
          path: '**/TestResults/*.trx'

  build-and-push-docker-image:
    runs-on: ubuntu-latest
    needs: build-and-test
    timeout-minutes: 60  

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker Image for Dev
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Faceit_Stats_Provider/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/faceitstatsprovider:dev
          # Remove or adjust platforms if not needed
          # platforms: linux/amd64

  deploy-dev:
    runs-on: ubuntu-latest
    needs: build-and-push-docker-image
    if: github.ref == 'refs/heads/dev'
    timeout-minutes: 120  

    steps:
      - name: Deploy to Server (Dev)
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          script: |
            set -e
            cd ~/Faceit_Stats_Provider

            # Checkout the deployment branch
            git checkout dev

            # Pull the latest changes for the deployment branch
            git pull origin dev

            # Pull the latest dev Docker image
            docker pull ${{ secrets.DOCKER_USERNAME }}/faceitstatsprovider:dev

            # Update Docker Compose to use the dev image
            sed -i 's|image: .*faceitstatsprovider:.*|image: '${{ secrets.DOCKER_USERNAME }}/faceitstatsprovider:dev'|' docker-compose.yml

            # Rebuild and restart Docker containers
            docker-compose up -d --build

            # Switch back to the main branch to maintain its state
            git checkout main

            # Optionally, log the deployment
            echo "Deployed dev image to server and switched back to main branch."
